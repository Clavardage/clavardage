plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // jpackage
    id "org.panteleyev.jpackageplugin" version "1.3.1"
}

version = '0.1.0'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.36.0.3'
    implementation group: 'net.harawata', name: 'appdirs', version: '1.2.1'
    implementation group: 'at.favre.lib', name: 'bcrypt', version: '0.9.0'
}

application {
    mainClass = 'clavardage.controller.Clavardage'
    applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]
}

jar {
    manifest {
        attributes( 'Implementation-Title': project.name,
                    'Implementation-Version': project.version,
                    'Main-Class': application.mainClass
        )
    }

    setDuplicatesStrategy(DuplicatesStrategy.EXCLUDE);
    from {
        configurations.runtimeClasspath.filter{ it.exists() }.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

tasks.jpackage {

    input = "${buildDir}/libs"
    destination = "${buildDir}/dist"

    appName = rootProject.name
    appVersion = project.version
    type = org.panteleyev.jpackage.ImageType.DEFAULT
    vendor = "rmonier"

    mainJar = jar.archiveFileName.get()
    mainClass = application.mainClass.get()

    javaOptions = application.applicationDefaultJvmArgs

    /* LINUX */

    linuxPackageName = jar.archiveBaseName.get()
    linuxShortcut = true

    icon = "${buildDir}/resources/main/img/icons/icon.png"

    /* WINDOWS */

    winMenu = true
    winDirChooser = true
    winShortcut = true

    windows {
        winConsole = false
        icon = "${buildDir}/resources/main/img/icons/icon.ico"
    }

    /* MACOS */

    macPackageName = jar.archiveBaseName.get()

    mac {
        icon = "${buildDir}/resources/main/img/icons/icon.icns"
    }
}

build.dependsOn(javadoc)

jpackage.dependsOn(jar)